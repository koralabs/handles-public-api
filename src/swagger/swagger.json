{
    "openapi": "3.0.3",
    "info": {
        "title": "Handles Public API",
        "description": "ADA Handle Public API",
        "termsOfService": "https://docs.handle.me/tou",
        "contact": {
            "email": "hello@adahandle.com"
        },
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "https://api.handle.me/v0"
        }
    ],
    "tags": [
        {
            "name": "handles",
            "description": "Handle endpoints",
            "externalDocs": {
                "description": "Related Handle Docs",
                "url": "https://docs.handle.me/api"
            }
        }
    ],
    "paths": {
        "/handles": {
            "get": {
                "tags": [
                    "handles"
                ],
                "summary": "Get all minted handles",
                "description": "Get all minted handles",
                "parameters": [
                    {
                        "name": "characters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Characters"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "Length of handles to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rarity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Rarity"
                        }
                    },
                    {
                        "name": "numeric_modifiers",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/NumericModifiers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "handle123\nmy.handle\ni-always-hodl\n..."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filter"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/handles/{handle}": {
            "get": {
                "tags": [
                    "handles"
                ],
                "parameters": [
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The Handle name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Handle"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Handle format"
                    },
                    "404": {
                        "description": "Handle not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/handles/{handle}/personalized": {
            "get": {
                "tags": [
                    "handles"
                ],
                "parameters": [
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The Handle name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Personalization"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Handle format"
                    },
                    "404": {
                        "description": "Handle not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/swagger": {
            "get": {
                "tags": [
                    "utils"
                ],
                "responses": {
                    "200": {
                        "description": "This swagger documentation"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "utils"
                ],
                "responses": {
                    "200": {
                        "description": "Current status of the Handles API"
                    },
                    "503": {
                        "description": "HTTP application failure"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Handle": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "my.handle"
                    },
                    "nft_image": {
                        "type": "string",
                        "description": "IPFS URL of the personalized handle image",
                        "example": "ipfs://hash_of_personalized_image"
                    },
                    "original_nft_image": {
                        "type": "string",
                        "description": "IPFS URL of the original NFT handle",
                        "example": "ipfs://hash_of_base_nft_image"
                    },
                    "length": {
                        "type": "integer",
                        "example": 9
                    },
                    "og": {
                        "type": "integer",
                        "description": "OG status. 0 means not an OG.",
                        "example": 0
                    },
                    "rarity": {
                        "$ref": "#/components/schemas/Rarity"
                    },
                    "characters": {
                        "$ref": "#/components/schemas/Characters"
                    },
                    "numeric_modifiers": {
                        "$ref": "#/components/schemas/NumericModifiers"
                    },
                    "resolved_addresses": {
                        "type": "object",
                        "properties": {
                            "ada": {
                                "type": "string",
                                "example": "addr1e00000000000000000000000000000000000001"
                            },
                            "eth": {
                                "type": "string",
                                "example": "addr1e00000000000000000000000000000000000002"
                            },
                            "btc": {
                                "type": "string",
                                "example": "addr1e00000000000000000000000000000000000003"
                            }
                        }
                    },
                    "personalization": {
                        "type": "object",
                        "properties": {
                            "profile_pic": {
                                "type": "string",
                                "description": "IPFS hash of the selected profile pic - cropped and zoomed",
                                "example": "Q2de4Fg56tNHy82300000001"
                            }
                        }
                    }
                }
            },
            "Personalization": {
                "type": "object",
                "properties": {
                    "to_be_determined": {
                        "type": "string",
                        "example": "TBD"
                    }
                }
            },
            "Characters": {
                "type": "string",
                "example": "letters,numbers,special",
                "description": "Included character types in the handles. Numbers includes negative and decimal numbers. \n  <br />`letters` - All characters are letters\n  <br />`numbers` - All characters are valid numeric characters (including decimals and negative)\n  <br />`special` - All characters are dash, period, or underscore"
            },
            "Rarity": {
                "type": "string",
                "example": "ultra_rare",
                "description": "Handle rarities:\n<br />`basic` - 8-15 characters\n<br />`common` - 4-7 characters\n<br />`rare` - 3 characters\n<br />`ultra_rare` - 2 characters\n<br />`legendary` - 1 character",
                "enum": [
                    "basic",
                    "common",
                    "rare",
                    "ultra_rare",
                    "legendary"
                ]
            },
            "NumericModifiers": {
                "type": "string",
                "description": "This property will have one of the following:\n  <br />Blank or not defined is a positive whole number, or not a number\n  <br />`negative` - Negative whole number\n  <br />`decimal` - Positive decimal",
                "example": "negative,decimal"
            }
        },
        "requestBodies": {
            "Handle": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Handle"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            }
        }
    }
}